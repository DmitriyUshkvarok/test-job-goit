{"version":3,"file":"static/js/321.559374e7.chunk.js","mappings":"kKAEaA,E,QAAiBC,GAAAA,IAAH,gH,SCG3B,MAHA,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,SAACF,EAAD,UAAiBE,GACzB,C,gHCDYC,EAAWF,EAAAA,GAAAA,IAAH,iFAMRG,EAAeH,EAAAA,GAAAA,IAAH,kEAKZI,EAAWJ,EAAAA,GAAAA,IAAH,yNAWRK,GAAeL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,4Y,8BCvBZO,EAAcP,EAAAA,GAAAA,OAAH,6HAOXQ,EAAkBR,EAAAA,GAAAA,IAAH,2G,GAODA,EAAAA,GAAAA,EAAH,qD,kBCYxB,EAtBsB,WACpB,IAAMS,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMH,UAAhB,IAE9BG,EAAQH,EAAa,QAAU,QAErCI,EAAAA,EAAAA,YAAU,WACRC,SAASC,KAAKC,aAAa,aAAcJ,EAC1C,GAAE,CAACA,IAMJ,OACE,SAACN,EAAD,WACE,SAACD,EAAD,CAAaY,QANS,WACxBV,GAASW,EAAAA,EAAAA,MACV,EAIG,SACGT,GAAa,SAAC,MAAD,CAAQU,KAAM,MAAS,SAAC,MAAD,CAAOA,KAAM,QAIzD,ECFD,MAfA,WACE,OACE,UAAClB,EAAD,YACE,SAAC,KAAD,CAAMmB,GAAG,QAAT,UACE,SAACpB,EAAD,CAAUqB,IAAKC,EAAMC,IAAI,YAE3B,UAACrB,EAAD,YACE,SAACC,EAAD,CAAciB,GAAG,QAAjB,mBACA,SAACjB,EAAD,CAAciB,GAAG,QAAjB,0BACA,SAAC,EAAD,SAIP,C,wICrBYI,EAAU1B,EAAAA,GAAAA,OAAH,2lB,SCQpB,EARmB,WACjB,OACE,+BACE,SAAC0B,EAAD,CAASC,KAAK,SAAd,6BAGL,E,4DCLYC,GAAc5B,EAAAA,EAAAA,IAAO6B,EAAAA,IAAP7B,CAAH,2WAoBX8B,EAAW9B,EAAAA,GAAAA,GAAH,gIAQR+B,EAAY/B,EAAAA,GAAAA,GAAH,8HAOTE,EAAWF,EAAAA,GAAAA,IAAH,+HAQRgC,EAAgBhC,EAAAA,GAAAA,IAAH,+GAQbiC,EAAgBjC,EAAAA,GAAAA,IAAH,+CAIbkC,EAAkBlC,EAAAA,GAAAA,IAAH,mFAMfmC,EAAsBnC,EAAAA,GAAAA,IAAH,6LAUnBoC,EAAoBpC,EAAAA,GAAAA,IAAH,gJASjBqC,EAAYrC,EAAAA,GAAAA,IAAH,uKAUTsC,EAAkBtC,EAAAA,GAAAA,IAAH,6LAUfuC,EAAavC,EAAAA,GAAAA,EAAH,qPAYVwC,EAAexC,EAAAA,GAAAA,EAAH,2PAYZyC,EAAoBzC,EAAAA,GAAAA,EAAH,2PAYjB0C,EAAe1C,EAAAA,GAAAA,OAAH,+pBA8BZ2C,EAAiB3C,EAAAA,GAAAA,OAAH,8kB,wIC3J3B,I,UAIA,GAJiB,CACf4C,WAbF,WACE,OAAOC,EAAAA,EAAAA,IAAA,qDAEJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,GACjB,EAUCC,gBARF,SAAyBC,EAAIC,GAC3B,OAAON,EAAAA,EAAAA,IAAA,4DAA+DK,GAAM,CAC1EC,UAAAA,GAEH,GCsKD,GAzJc,WACZ,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,GAAnC,eAAOO,EAAP,KAAcC,EAAd,KACA,GAA8BR,EAAAA,EAAAA,WAAS,GAAvC,eAAOS,EAAP,KAAgBC,EAAhB,KACA,GAA0CV,EAAAA,EAAAA,UACxCW,KAAKC,MAAMC,aAAaC,QAAQ,mBAAqB,IADvD,eAAOC,EAAP,KAAsBC,EAAtB,KAGA,GAAsDhB,EAAAA,EAAAA,UACpDW,KAAKC,MAAMC,aAAaC,QAAQ,kBAAoB,CAAC,GADvD,eAAOG,EAAP,KAA4BC,EAA5B,MAKAvD,EAAAA,EAAAA,YAAU,WACRkD,aAAaM,QAAQ,eAAgBR,KAAKS,UAAUH,IACpDJ,aAAaM,QAAQ,gBAAiBR,KAAKS,UAAUL,GACtD,GAAE,CAACE,EAAqBF,KAGzBpD,EAAAA,EAAAA,YAAU,WACR0D,GAAAA,aAEG3B,MAAK,SAAAO,GACJC,EAASD,GACLA,EAAMqB,QAAUf,GAClBG,GAAW,EAEd,IACAa,OAAM,SAAApB,GACLC,EAASD,EACV,IACAqB,SAAQ,kBAAMlB,GAAW,EAAjB,GACZ,GAAE,CAACL,EAAMqB,OAAQf,IAiElB,OAAIJ,GACK,uBAAIA,EAAMsB,WAIjB,iCACE,SAAC/C,EAAD,UACG2B,GACC,SAAC7B,EAAD,CAAaP,KAAM,GAAIyD,MAAM,SAE7BzB,EACG0B,MAAM,EAAGpB,GACTqB,KAAI,gBAAG9B,EAAH,EAAGA,GAAI+B,EAAP,EAAOA,OAAQ9B,EAAf,EAAeA,UAAW+B,EAA1B,EAA0BA,OAAQC,EAAlC,EAAkCA,KAAlC,OACH,UAACpD,EAAD,YACE,SAAC7B,EAAD,CAAUqB,IAAKC,EAAMC,IAAI,UACzB,SAACO,EAAD,CAAeT,IAAK6D,EAAU3D,IAAI,cAClC,UAACQ,EAAD,YACE,SAACC,EAAD,CAAiBX,I,y/LAAiBE,IAAI,gBACtC,UAACU,EAAD,YACE,SAACC,EAAD,CAAmBb,IAAK8D,EAAa5D,IAAI,gBACzC,SAACY,EAAD,CAAWd,IAAK0D,EAAQxD,IAAK0D,WAGjC,UAAC7C,EAAD,YACE,UAACE,EAAD,mBAAoB2C,MACpB,UAAC5C,EAAD,qBAAoB2C,MACpB,UAACzC,EAAD,wBAEGU,EAAUmC,eAAe,QAAS,CAAEC,aAAa,QAEpD,SAAC7C,EAAD,CACE8C,UACEnB,EAAoBnB,GAChB,sBACA,eAENvB,KAAK,SACLR,QAAS,kBAnGD,SAAC+B,EAAIC,GACzBgB,EAAcsB,SAASvC,GAEzBuB,GAAAA,gBACmBvB,EAAIC,EAAY,GAChCL,MAAK,WACJsB,EAAiBD,EAAcuB,QAAO,SAAAC,GAAM,OAAIA,IAAWzC,CAAf,KAC5CoB,GAAuB,SAAAsB,GAAgB,yBAClCA,GADkC,cAEpC1C,GAAK,GAF+B,IAIvCI,GAAS,SAAAD,GACP,IAAMwC,EAAYxC,EAAMyC,WAAU,SAAAX,GAAI,OAAIA,EAAKjC,KAAOA,CAAhB,IAChC6C,GAAW,kBACZ1C,EAAMwC,IADM,IAEf1C,UAAWA,EAAY,IAEnB6C,GAAY,OAAO3C,GAEzB,OADA2C,EAAaH,GAAaE,EACnBC,CACR,GACF,IACArB,OAAM,SAAApB,GACL0C,QAAQC,IAAI3C,EACb,IAGHkB,GAAAA,gBACmBvB,EAAIC,EAAY,GAChCL,MAAK,WACJsB,EAAiB,GAAD,eAAKD,GAAL,CAAoBjB,KACpCoB,GAAuB,SAAAsB,GAAgB,yBAClCA,GADkC,cAEpC1C,GAAK,GAF+B,IAIvCI,GAAS,SAAAD,GACP,IAAMwC,EAAYxC,EAAMyC,WAAU,SAAAX,GAAI,OAAIA,EAAKjC,KAAOA,CAAhB,IAChC6C,GAAW,kBACZ1C,EAAMwC,IADM,IAEf1C,UAAWA,EAAY,IAEnB6C,GAAY,OAAO3C,GAEzB,OADA2C,EAAaH,GAAaE,EACnBC,CACR,GACF,IACArB,OAAM,SAAApB,GACL0C,QAAQC,IAAI3C,EACb,GAEN,CAiDgC4C,CAAkBjD,EAAIC,EAA5B,EAPX,SASGkB,EAAoBnB,GAAM,YAAc,gBA1B/BA,EADb,MAkCVW,IACC,SAAClB,EAAD,CAAgBhB,KAAK,SAASR,QAxDP,WACvB0C,IACFD,EAASD,EAAQ,GACbN,EAAMqB,QAAUf,EAAQ,GAC1BG,GAAW,GAGhB,EAiDK,yBAMP,E,sBC7KYsC,GAAkBpG,EAAAA,GAAAA,QAAH,uGAMfqG,GAAgBrG,EAAAA,GAAAA,GAAH,mLASbsG,GAAsBtG,EAAAA,GAAAA,GAAH,qLASnBuG,IAAoBvG,EAAAA,EAAAA,IAAOwG,KAAPxG,CAAH,whB,iCCK9B,GApBiB,WAAO,IAAD,IAEfyG,EAAQ,qBADGC,EAAAA,GAAAA,MACS7F,aAAZ,aAAG,EAAgB8F,YAAnB,QAA2B,OAEzC,OACE,UAACP,GAAD,YACE,SAACG,GAAD,CAAmBK,QAAM,KACzB,UAACC,EAAA,EAAD,YACE,SAACC,GAAA,EAAD,KACA,SAACT,GAAD,4BACA,SAAC,MAAD,CAAM/E,GAAImF,EAAV,UACE,SAAC,EAAD,OAEF,SAACH,GAAD,2BACA,SAAC,GAAD,SAIP,C","sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/Navigation/Navigation.styled.js","components/ThemeSwitcher/ThemeSwither.styled.js","components/ThemeSwitcher/ThemeSwitcher.jsx","components/Navigation/Navigation.jsx","components/ButtonBack/ButtonBack.styled.js","components/ButtonBack/ButtonBack.jsx","components/Cards/Cards.styled.js","services/api.js","components/Cards/Cards.jsx","pages/UserPages/UserPage.styled.js","pages/UserPages/UserPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyleContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding-left: 10px;\n  padding-right: 10px;\n`;\n","import { StyleContainer } from './Container.styled';\n\nfunction Container({ children }) {\n  return <StyleContainer>{children}</StyleContainer>;\n}\nexport default Container;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MainLogo = styled.img`\n  width: 176px;\n  height: 52px;\n  padding-left: 20px;\n`;\n\nexport const NavContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const StyleNav = styled.nav`\n  display: flex;\n  gap: 10px;\n  margin-left: auto;\n  font-size: 20px;\n  font-weight: bold;\n  font-family: var(--font-family);\n  text-transform: uppercase;\n  text-shadow: 0 0 50px blue;\n`;\n\nexport const StyleNavLink = styled(NavLink)`\n  color: var(--color-text);\n  transition: color var(--transition);\n  position: relative;\n\n  &:hover {\n    color: aqua;\n  }\n\n  &.active {\n    color: aqua;\n  }\n\n  &.active::before {\n    content: '';\n    display: block;\n    position: absolute;\n    bottom: -10px;\n    width: 100%;\n    height: 3px;\n    background-color: aqua;\n    border-radius: 5px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const BtnSwitcher = styled.button`\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  color: var(--activeColor);\n`;\n\nexport const SwitcherWrapper = styled.div`\n  display: flex;\n  gap: 5px;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const SwitherText = styled.p`\n  color: var(--color-text);\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { FaSun, FaMoon } from 'react-icons/fa';\nimport { toggleTheme } from 'redux/themeSlice';\nimport { BtnSwitcher, SwitcherWrapper } from './ThemeSwither.styled';\nimport { useEffect } from 'react';\n\nconst ThemeSwitcher = () => {\n  const dispatch = useDispatch();\n  const isDarkMode = useSelector(state => state.theme.isDarkMode);\n\n  const theme = isDarkMode ? 'light' : 'dark';\n\n  useEffect(() => {\n    document.body.setAttribute('data-theme', theme);\n  }, [theme]);\n\n  const handleThemeToggle = () => {\n    dispatch(toggleTheme());\n  };\n\n  return (\n    <SwitcherWrapper>\n      <BtnSwitcher onClick={handleThemeToggle}>\n        {isDarkMode ? <FaMoon size={16} /> : <FaSun size={16} />}\n      </BtnSwitcher>\n    </SwitcherWrapper>\n  );\n};\nexport default ThemeSwitcher;\n","import Logo from '../../images/Logo.png';\nimport {\n  MainLogo,\n  NavContainer,\n  StyleNav,\n  StyleNavLink,\n} from './Navigation.styled';\nimport { Link } from 'react-router-dom';\nimport ThemeSwitcher from 'components/ThemeSwitcher/ThemeSwitcher';\n\nfunction Navigation() {\n  return (\n    <NavContainer>\n      <Link to=\"/home\">\n        <MainLogo src={Logo} alt=\"Logo\" />\n      </Link>\n      <StyleNav>\n        <StyleNavLink to=\"/home\">Home</StyleNavLink>\n        <StyleNavLink to=\"/user\">User Tweets</StyleNavLink>\n        <ThemeSwitcher />\n      </StyleNav>\n    </NavContainer>\n  );\n}\n\nexport default Navigation;\n","import styled from 'styled-components';\n\nexport const BtnBack = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: var(--font-family);\n  background: var(--background-body);\n  color: var(--color-text);\n  border-radius: 30px;\n  border: none;\n  width: 100px;\n  height: 50px;\n  margin-bottom: 20px;\n  transition: background-color 0.4s;\n  -webkit-transition: background-color 0.4s;\n  -moz-transition: background-color 0.4s;\n  -ms-transition: background-color 0.4s;\n  -o-transition: background-color 0.4s;\n  cursor: pointer;\n\n  &:hover {\n    background: var(--buttonHover);\n    color: black;\n  }\n`;\n","import { BtnBack } from './ButtonBack.styled';\n\nconst ButtonBack = () => {\n  return (\n    <>\n      <BtnBack type=\"button\">&#8592; Go Back</BtnBack>\n    </>\n  );\n};\n\nexport default ButtonBack;\n","import styled from 'styled-components';\nimport { FaReact } from 'react-icons/fa';\n\nexport const CardsLoader = styled(FaReact)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n  animation: rotate 5s infinite linear;\n  -webkit-animation: rotate 5s infinite linear;\n\n  @keyframes rotate {\n    from {\n      transform: rotate(0deg);\n    }\n\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport const CardList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin-bottom: 30px;\n`;\n\nexport const CardsItem = styled.li`\n  position: relative;\n  width: 380px;\n  background: var(--backgroundCard);\n  border-radius: 20px;\n`;\n\nexport const MainLogo = styled.img`\n  width: 76px;\n  height: 22px;\n  padding-top: 20px;\n  padding-left: 20px;\n  margin-bottom: 180px;\n`;\n\nexport const PromoImgCards = styled.img`\n  position: absolute;\n  width: 308px;\n  height: 168px;\n  top: 28px;\n  left: 36px;\n`;\n\nexport const AvatarWrapper = styled.div`\n  position: relative;\n`;\n\nexport const TransverseCards = styled.img`\n  display: block;\n  width: 100%;\n  margin-bottom: 62px;\n`;\n\nexport const AvatarOvalContainer = styled.div`\n  position: absolute;\n  width: 80px;\n  height: 80px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: var(--background-body);\n`;\n\nexport const AvatarCardsCircle = styled.img`\n  width: 92px;\n  height: 92px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const ImgAvatar = styled.img`\n  width: 65px;\n  height: 65px;\n  position: absolute;\n  top: 44%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  border-radius: 50%;\n`;\n\nexport const TweetsContainer = styled.div`\n  max-width: 250px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-content: center;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const TweetsText = styled.p`\n  font-family: 'Montserrat';\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n  color: var(--color-text);\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 16px;\n`;\n\nexport const CardUserName = styled.p`\n  font-family: var(--font-family);\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n  color: var(--color-text);\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 16px;\n`;\n\nexport const CardUserFollowers = styled.p`\n  font-family: var(--font-family);\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n  color: var(--color-text);\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 16px;\n`;\n\nexport const ButtonFollow = styled.button`\n  width: 196px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: var(--font-family);\n  font-weight: 600;\n  line-height: 22px;\n  color: var(--color-text);\n  text-transform: uppercase;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 36px;\n  background: var(--background-body);\n  border: none;\n  border-radius: var(--border-radius);\n  padding: 14px 28px;\n  transition: color var(--transition);\n  cursor: pointer;\n\n  &.button-color-active {\n    background: var(--button-color-active);\n  }\n\n  &:hover {\n    background: var(--buttonHover);\n    color: var(--button-color-text);\n  }\n`;\n\nexport const ButtonLoadMore = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  font-family: var(--font-family);\n  font-weight: 600;\n  line-height: 22px;\n  color: var(--color-text);\n  text-transform: uppercase;\n  background: var(--background-body);\n  border: none;\n  border-radius: var(--border-radius);\n  padding: 14px 28px;\n  transition: var(--transition);\n  cursor: pointer;\n\n  &:hover {\n    background: var(--buttonHover);\n    color: var(--button-color-text);\n  }\n`;\n","import axios from 'axios';\n\nfunction fetchUsers() {\n  return axios\n    .get(`https://6442c7f376540ce2259567c9.mockapi.io/users`)\n    .then(response => response.data);\n}\n\nfunction updateFollowers(id, followers) {\n  return axios.put(`https://6442c7f376540ce2259567c9.mockapi.io/users/${id}`, {\n    followers,\n  });\n}\n\nconst apiUsers = {\n  fetchUsers,\n  updateFollowers,\n};\nexport default apiUsers;\n","import { useEffect, useState } from 'react';\nimport {\n  CardList,\n  CardsItem,\n  MainLogo,\n  PromoImgCards,\n  TransverseCards,\n  AvatarWrapper,\n  AvatarOvalContainer,\n  AvatarCardsCircle,\n  TweetsContainer,\n  TweetsText,\n  ButtonFollow,\n  CardUserName,\n  CardUserFollowers,\n  ButtonLoadMore,\n  ImgAvatar,\n  CardsLoader,\n} from './Cards.styled';\nimport Logo from '../../images/Logo.png';\nimport PromoImg from '../../images/picture.png';\nimport Transverse from '../../images/Rectangle1.png';\nimport AvatarCards from '../../images/Ellipse(Stroke).png';\nimport apiUsers from '../../services/api';\n\nconst Cards = () => {\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [limit, setLimit] = useState(3);\n  const [hasMore, setHasMore] = useState(true);\n  const [followedUsers, setFollowedUsers] = useState(\n    JSON.parse(localStorage.getItem('followedUsers')) || []\n  );\n  const [buttonColorsAndText, setButtonColorsAndText] = useState(\n    JSON.parse(localStorage.getItem('buttonColors')) || {}\n  );\n\n  // local storage color button\n  useEffect(() => {\n    localStorage.setItem('buttonColors', JSON.stringify(buttonColorsAndText));\n    localStorage.setItem('followedUsers', JSON.stringify(followedUsers));\n  }, [buttonColorsAndText, followedUsers]);\n\n  // request on render user cards\n  useEffect(() => {\n    apiUsers\n      .fetchUsers()\n      .then(users => {\n        setUsers(users);\n        if (users.length <= limit) {\n          setHasMore(false);\n        }\n      })\n      .catch(error => {\n        setError(error);\n      })\n      .finally(() => setLoading(false));\n  }, [users.length, limit]);\n\n  // request on put followers\n  const handleFollowClick = (id, followers) => {\n    if (followedUsers.includes(id)) {\n      // Отменяем подписку\n      apiUsers\n        .updateFollowers(id, followers - 1)\n        .then(() => {\n          setFollowedUsers(followedUsers.filter(userId => userId !== id));\n          setButtonColorsAndText(prevButtonColors => ({\n            ...prevButtonColors,\n            [id]: false,\n          }));\n          setUsers(users => {\n            const userIndex = users.findIndex(user => user.id === id);\n            const updatedUser = {\n              ...users[userIndex],\n              followers: followers - 1,\n            };\n            const updatedUsers = [...users];\n            updatedUsers[userIndex] = updatedUser;\n            return updatedUsers;\n          });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    } else {\n      // Подписываемся\n      apiUsers\n        .updateFollowers(id, followers + 1)\n        .then(() => {\n          setFollowedUsers([...followedUsers, id]);\n          setButtonColorsAndText(prevButtonColors => ({\n            ...prevButtonColors,\n            [id]: true,\n          }));\n          setUsers(users => {\n            const userIndex = users.findIndex(user => user.id === id);\n            const updatedUser = {\n              ...users[userIndex],\n              followers: followers + 1,\n            };\n            const updatedUsers = [...users];\n            updatedUsers[userIndex] = updatedUser;\n            return updatedUsers;\n          });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  };\n\n  // click buttom load more\n  const handleButtonLoadMore = () => {\n    if (hasMore) {\n      setLimit(limit + 3);\n      if (users.length <= limit + 3) {\n        setHasMore(false);\n      }\n    }\n  };\n\n  if (error) {\n    return <p>{error.message}</p>;\n  }\n\n  return (\n    <>\n      <CardList>\n        {loading ? (\n          <CardsLoader size={50} color=\"aqua\" />\n        ) : (\n          users\n            .slice(0, limit)\n            .map(({ id, avatar, followers, tweets, user }) => (\n              <CardsItem key={id}>\n                <MainLogo src={Logo} alt=\"Logo\" />\n                <PromoImgCards src={PromoImg} alt=\"PromoImg\" />\n                <AvatarWrapper>\n                  <TransverseCards src={Transverse} alt=\"Transverse\" />\n                  <AvatarOvalContainer>\n                    <AvatarCardsCircle src={AvatarCards} alt=\"Transverse\" />\n                    <ImgAvatar src={avatar} alt={user} />\n                  </AvatarOvalContainer>\n                </AvatarWrapper>\n                <TweetsContainer>\n                  <CardUserName>user:{user}</CardUserName>\n                  <TweetsText>tweets:{tweets}</TweetsText>\n                  <CardUserFollowers>\n                    followers:\n                    {followers.toLocaleString('en-US', { useGrouping: true })}\n                  </CardUserFollowers>\n                  <ButtonFollow\n                    className={\n                      buttonColorsAndText[id]\n                        ? 'button-color-active'\n                        : 'button-color'\n                    }\n                    type=\"button\"\n                    onClick={() => handleFollowClick(id, followers)}\n                  >\n                    {buttonColorsAndText[id] ? 'Following' : 'Follow'}\n                  </ButtonFollow>\n                </TweetsContainer>\n              </CardsItem>\n            ))\n        )}\n      </CardList>\n      {hasMore && (\n        <ButtonLoadMore type=\"button\" onClick={handleButtonLoadMore}>\n          load more\n        </ButtonLoadMore>\n      )}\n    </>\n  );\n};\n\nexport default Cards;\n","import styled from 'styled-components';\nimport ScrollToTop from 'react-scroll-to-top';\n\nexport const PageUserWrapper = styled.section`\n  padding: 20px;\n  min-height: 100vh;\n  background: var(--background-body);\n`;\n\nexport const PageUserTitle = styled.h1`\n  font-family: var(--font-family);\n  display: flex;\n  justify-content: center;\n  font-size: 61px;\n  margin-bottom: 30px;\n  color: var(--color-text);\n`;\n\nexport const PageUserDescription = styled.h1`\n  font-family: var(--font-family);\n  display: flex;\n  justify-content: center;\n  font-size: 41px;\n  margin-bottom: 20px;\n  color: var(--color-text);\n`;\n\nexport const StyledScrollToTop = styled(ScrollToTop)`\n  width: 150px;\n  height: 50px;\n  border-radius: 50% !important;\n  -webkit-border-radius: 50%;\n  -moz-border-radius: 50%;\n  -ms-border-radius: 50%;\n  -o-border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: var(--background-body) !important;\n  transition: var(--transition);\n\n  svg {\n    fill: var(--color-text);\n\n    &:hover {\n      fill: var(--buttonHover);\n    }\n  }\n\n  &:hover {\n    background-color: var(--color-text) !important;\n  }\n`;\n","import Container from '../../components/Container/Container';\nimport ButtonBack from '../../components/ButtonBack/ButtonBack';\nimport Cards from '../../components/Cards/Cards';\nimport {\n  PageUserWrapper,\n  PageUserTitle,\n  PageUserDescription,\n  StyledScrollToTop,\n} from './UserPage.styled';\nimport Navigation from '../../components/Navigation/Navigation';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst UserPage = () => {\n  const location = useLocation();\n  const backLink = location.state?.from ?? 'home';\n\n  return (\n    <PageUserWrapper>\n      <StyledScrollToTop smooth />\n      <Container>\n        <Navigation />\n        <PageUserTitle>Users Tweets</PageUserTitle>\n        <Link to={backLink}>\n          <ButtonBack />\n        </Link>\n        <PageUserDescription>Tweet Cards</PageUserDescription>\n        <Cards />\n      </Container>\n    </PageUserWrapper>\n  );\n};\n\nexport default UserPage;\n"],"names":["StyleContainer","styled","children","MainLogo","NavContainer","StyleNav","StyleNavLink","NavLink","BtnSwitcher","SwitcherWrapper","dispatch","useDispatch","isDarkMode","useSelector","state","theme","useEffect","document","body","setAttribute","onClick","toggleTheme","size","to","src","Logo","alt","BtnBack","type","CardsLoader","FaReact","CardList","CardsItem","PromoImgCards","AvatarWrapper","TransverseCards","AvatarOvalContainer","AvatarCardsCircle","ImgAvatar","TweetsContainer","TweetsText","CardUserName","CardUserFollowers","ButtonFollow","ButtonLoadMore","fetchUsers","axios","then","response","data","updateFollowers","id","followers","useState","users","setUsers","error","setError","loading","setLoading","limit","setLimit","hasMore","setHasMore","JSON","parse","localStorage","getItem","followedUsers","setFollowedUsers","buttonColorsAndText","setButtonColorsAndText","setItem","stringify","apiUsers","length","catch","finally","message","color","slice","map","avatar","tweets","user","PromoImg","AvatarCards","toLocaleString","useGrouping","className","includes","filter","userId","prevButtonColors","userIndex","findIndex","updatedUser","updatedUsers","console","log","handleFollowClick","PageUserWrapper","PageUserTitle","PageUserDescription","StyledScrollToTop","ScrollToTop","backLink","useLocation","from","smooth","Container","Navigation"],"sourceRoot":""}
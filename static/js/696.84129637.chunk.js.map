{"version":3,"file":"static/js/696.84129637.chunk.js","mappings":"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","sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/Navigation/Navigation.styled.js","components/Navigation/Navigation.jsx","components/ButtonBack/ButtonBack.styled.js","components/ButtonBack/ButtonBack.jsx","components/CardsItem/Cards.styled.js","services/api.js","components/CardsItem/Cards.jsx","pages/UserPages/UserPage.styled.js","pages/UserPages/UserPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyleContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding-left: 10px;\n  padding-right: 10px;\n`;\n","import { StyleContainer } from './Container.styled';\n\nfunction Container({ children }) {\n  return <StyleContainer>{children}</StyleContainer>;\n}\nexport default Container;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MainLogo = styled.img`\n  width: 176px;\n  height: 52px;\n  padding-top: 20px;\n  padding-left: 20px;\n  margin-bottom: 22px;\n`;\n\nexport const NavContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const StyleNav = styled.nav`\n  display: flex;\n  gap: 10px;\n  margin-left: auto;\n  font-size: 20px;\n  font-weight: bold;\n  font-family: var(--font-family);\n  text-transform: uppercase;\n  text-shadow: 0 0 50px blue;\n`;\n\nexport const StyleNavLink = styled(NavLink)`\n  color: var(--color-text);\n  transition: color var(--transition);\n\n  &:hover {\n    color: aqua;\n  }\n`;\n","import Logo from '../../images/Logo.png';\nimport { MainLogo, NavContainer, StyleNav, StyleNavLink } from './Navigation.styled';\nimport { Link } from 'react-router-dom';\n\nfunction Navigation() {\n  return (\n    <NavContainer>\n      <Link to=\"/home\">\n        <MainLogo src={Logo} alt=\"Logo\" />\n      </Link>\n      <StyleNav>\n        <StyleNavLink to=\"/home\">Home</StyleNavLink>\n        <StyleNavLink to=\"/user\">User Tweets</StyleNavLink>\n      </StyleNav>\n    </NavContainer>\n  );\n}\n\nexport default Navigation;\n","import styled from 'styled-components';\n\nexport const BtnBack = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: var(--font-family);\n  background-color: var(--background-body);\n  border-radius: 30px;\n  border: none;\n  width: 100px;\n  height: 50px;\n  margin-bottom: 20px;\n  transition: background-color 0.4s;\n  -webkit-transition: background-color 0.4s;\n  -moz-transition: background-color 0.4s;\n  -ms-transition: background-color 0.4s;\n  -o-transition: background-color 0.4s;\n  cursor: pointer;\n\n  &:hover {\n    background: #fefe;\n  }\n`;\n","import { BtnBack } from './ButtonBack.styled';\n\nconst ButtonBack = () => {\n  return (\n    <>\n      <BtnBack type=\"button\">&#8592; Go Back</BtnBack>\n    </>\n  );\n};\n\nexport default ButtonBack;\n","import styled from 'styled-components';\n\nexport const CardList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin-bottom: 30px;\n`;\n\nexport const CardsItem = styled.li`\n  position: relative;\n  width: 380px;\n  background-color: var(--background-body);\n  border-radius: 20px;\n`;\n\nexport const MainLogo = styled.img`\n  width: 76px;\n  height: 22px;\n  padding-top: 20px;\n  padding-left: 20px;\n  margin-bottom: 180px;\n`;\n\nexport const PromoImgCards = styled.img`\n  position: absolute;\n  width: 308px;\n  height: 168px;\n  top: 28px;\n  left: 36px;\n`;\n\nexport const AvatarWrapper = styled.div`\n  position: relative;\n`;\n\nexport const TransverseCards = styled.img`\n  display: block;\n  width: 100%;\n  margin-bottom: 62px;\n`;\n\nexport const AvatarOvalContainer = styled.div`\n  position: absolute;\n  width: 80px;\n  height: 80px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: var(--background-body);\n`;\n\nexport const AvatarCardsCircle = styled.img`\n  width: 92px;\n  height: 92px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const ImgAvatar = styled.img`\n  width: 65px;\n  height: 65px;\n  position: absolute;\n  top: 44%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  border-radius: 50%;\n`;\n\nexport const TweetsContainer = styled.div`\n  max-width: 250px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-content: center;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const TweetsText = styled.p`\n  font-family: 'Montserrat';\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n  color: var(--color-text);\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 16px;\n`;\n\nexport const FollowersText = styled.p`\n  font-family: var(--font-family);\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n  color: var(--color-text);\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 26px;\n`;\n\nexport const CardUserName = styled.p`\n  font-family: var(--font-family);\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n  color: var(--color-text);\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 16px;\n`;\n\nexport const CardUserFollowers = styled.p`\n  font-family: var(--font-family);\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n  color: var(--color-text);\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 16px;\n`;\n\nexport const ButtonFollow = styled.button`\n  width: 196px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: var(--font-family);\n  font-weight: 600;\n  line-height: 22px;\n  color: var(--button-color-text);\n  text-transform: uppercase;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 36px;\n  background-color: var(--button-color);\n  border: none;\n  border-radius: var(--border-radius);\n  padding: 14px 28px;\n  transition: background-color var(--transition);\n\n  &.button-color-active {\n    background-color: var(--button-color-active);\n  }\n\n  &:hover {\n    background-color: #fefefe;\n  }\n`;\n\nexport const ButtonLoadMore = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  font-family: var(--font-family);\n  font-weight: 600;\n  line-height: 22px;\n  color: var(--button-color-text);\n  text-transform: uppercase;\n  background-color: var(--button-color);\n  border: none;\n  border-radius: var(--border-radius);\n  padding: 14px 28px;\n  transition: background-color var(--transition);\n\n  &:hover {\n    background-color: #fefefe;\n  }\n`;\n","import axios from 'axios';\n\nfunction fetchUsers() {\n  return axios\n    .get(`https://6442c7f376540ce2259567c9.mockapi.io/users`)\n    .then((response) => response.data);\n}\n\nfunction updateFollowers(id, followers) {\n  return axios.put(`https://6442c7f376540ce2259567c9.mockapi.io/users/${id}`, { followers });\n}\n\nconst apiUsers = {\n  fetchUsers,\n  updateFollowers,\n};\nexport default apiUsers;\n","import { useEffect, useState } from 'react';\nimport {\n  CardList,\n  CardsItem,\n  MainLogo,\n  PromoImgCards,\n  TransverseCards,\n  AvatarWrapper,\n  AvatarOvalContainer,\n  AvatarCardsCircle,\n  TweetsContainer,\n  TweetsText,\n  FollowersText,\n  ButtonFollow,\n  CardUserName,\n  CardUserFollowers,\n  ButtonLoadMore,\n  ImgAvatar,\n} from './Cards.styled';\nimport Logo from '../../images/Logo.png';\nimport PromoImg from '../../images/picture.png';\nimport Transverse from '../../images/Rectangle1.png';\nimport AvatarCards from '../../images/Ellipse(Stroke).png';\nimport apiUsers from '../../services/api';\n\nconst Cards = () => {\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [limit, setLimit] = useState(3);\n  const [hasMore, setHasMore] = useState(true);\n  const [followedUsers, setFollowedUsers] = useState([]);\n  const [buttonColors, setButtonColors] = useState(\n    JSON.parse(localStorage.getItem('buttonColors')) || {}\n  );\n\n  // local storage color button\n  useEffect(() => {\n    localStorage.setItem('buttonColors', JSON.stringify(buttonColors));\n  }, [buttonColors]);\n\n  // request on render user cards\n  useEffect(() => {\n    apiUsers\n      .fetchUsers()\n      .then((users) => {\n        setUsers(users);\n        if (users.length <= limit) {\n          setHasMore(false);\n        }\n      })\n      .catch((error) => {\n        setError(error);\n      })\n      .finally(() => setLoading(false));\n  }, [users.length, limit]);\n\n  if (error) {\n    return <p>{error.message}</p>;\n  }\n\n  // click buttom load more\n  const handleButtonLoadMore = () => {\n    if (hasMore) {\n      setLimit(limit + 3);\n      if (users.length <= limit + 3) {\n        setHasMore(false);\n      }\n    }\n  };\n\n  // request on put followers\n  const handleFollowClick = (id, followers) => {\n    if (followedUsers.includes(id)) {\n      // Отменяем подписку\n      apiUsers\n        .updateFollowers(id, followers - 1)\n        .then(() => {\n          setFollowedUsers(followedUsers.filter((userId) => userId !== id));\n          setButtonColors((prevButtonColors) => ({ ...prevButtonColors, [id]: false }));\n          setUsers((users) => {\n            const userIndex = users.findIndex((user) => user.id === id);\n            const updatedUser = {\n              ...users[userIndex],\n              followers: followers - 1,\n            };\n            const updatedUsers = [...users];\n            updatedUsers[userIndex] = updatedUser;\n            return updatedUsers;\n          });\n          localStorage.setItem(`buttonText_${id}`, 'Follow');\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      // Подписываемся\n      apiUsers\n        .updateFollowers(id, followers + 1)\n        .then(() => {\n          setFollowedUsers([...followedUsers, id]);\n          setButtonColors((prevButtonColors) => ({ ...prevButtonColors, [id]: true }));\n          setUsers((users) => {\n            const userIndex = users.findIndex((user) => user.id === id);\n            const updatedUser = {\n              ...users[userIndex],\n              followers: followers + 1,\n            };\n            const updatedUsers = [...users];\n            updatedUsers[userIndex] = updatedUser;\n            return updatedUsers;\n          });\n          localStorage.setItem(`buttonText_${id}`, 'Following');\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  };\n\n  return (\n    <>\n      <CardList>\n        {loading ? (\n          <p>Loading...</p>\n        ) : (\n          users.slice(0, limit).map(({ id, avatar, followers, tweets, user }) => (\n            <CardsItem key={id}>\n              <MainLogo src={Logo} alt=\"Logo\" />\n              <PromoImgCards src={PromoImg} alt=\"PromoImg\" />\n              <AvatarWrapper>\n                <TransverseCards src={Transverse} alt=\"Transverse\" />\n                <AvatarOvalContainer>\n                  <AvatarCardsCircle src={AvatarCards} alt=\"Transverse\" />\n                  <ImgAvatar src={avatar} alt={user} />\n                </AvatarOvalContainer>\n              </AvatarWrapper>\n              <TweetsContainer>\n                <CardUserName>user:{user}</CardUserName>\n                <CardUserFollowers>followers:{followers}</CardUserFollowers>\n                <TweetsText>tweets:{tweets}</TweetsText>\n                <FollowersText>{followers}</FollowersText>\n                <ButtonFollow\n                  className={buttonColors[id] ? 'button-color-active' : 'button-color'}\n                  type=\"button\"\n                  onClick={() => handleFollowClick(id, followers)}\n                >\n                  {localStorage.getItem(`buttonText_${id}`) ||\n                    (followedUsers.includes(id) ? 'Following' : 'Follow')}\n                </ButtonFollow>\n              </TweetsContainer>\n            </CardsItem>\n          ))\n        )}\n      </CardList>\n      {hasMore && (\n        <ButtonLoadMore type=\"button\" onClick={handleButtonLoadMore}>\n          load more\n        </ButtonLoadMore>\n      )}\n    </>\n  );\n};\n\nexport default Cards;\n","import styled from 'styled-components';\n\nexport const PageUserWrapper = styled.section`\n  padding-bottom: 20px;\n  min-height: 100vh;\n  background: #6441a5;\n  background: -webkit-linear-gradient(to right, #2a0845, #6441a5);\n  background: linear-gradient(to right, #2a0845, #6441a5);\n`;\n\nexport const PageUserTitle = styled.h1`\n  font-family: var(--font-family);\n  display: flex;\n  justify-content: center;\n  font-size: 61px;\n  margin-bottom: 30px;\n  color: var(--color-text);\n`;\n\nexport const PageUserDescription = styled.h1`\n  font-family: var(--font-family);\n  display: flex;\n  justify-content: center;\n  font-size: 41px;\n  margin-bottom: 20px;\n  color: var(--color-text);\n`;\n","import Container from '../../components/Container/Container';\nimport ButtonBack from '../../components/ButtonBack/ButtonBack';\nimport Cards from '../../components/CardsItem/Cards';\nimport { PageUserWrapper, PageUserTitle, PageUserDescription } from './UserPage.styled';\nimport Navigation from '../../components/Navigation/Navigation';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst UserPage = () => {\n  const location = useLocation();\n  const backLink = location.state?.from ?? 'home';\n\n  return (\n    <PageUserWrapper>\n      <Container>\n        <Navigation />\n        <PageUserTitle>Users Tweets</PageUserTitle>\n        <Link to={backLink}>\n          <ButtonBack />\n        </Link>\n        <PageUserDescription>Tweet Cards</PageUserDescription>\n        <Cards />\n      </Container>\n    </PageUserWrapper>\n  );\n};\n\nexport default UserPage;\n"],"names":["StyleContainer","styled","children","MainLogo","NavContainer","StyleNav","StyleNavLink","NavLink","to","src","Logo","alt","BtnBack","type","CardList","CardsItem","PromoImgCards","AvatarWrapper","TransverseCards","AvatarOvalContainer","AvatarCardsCircle","ImgAvatar","TweetsContainer","TweetsText","FollowersText","CardUserName","CardUserFollowers","ButtonFollow","ButtonLoadMore","fetchUsers","axios","then","response","data","updateFollowers","id","followers","useState","users","setUsers","error","setError","loading","setLoading","limit","setLimit","hasMore","setHasMore","followedUsers","setFollowedUsers","JSON","parse","localStorage","getItem","buttonColors","setButtonColors","useEffect","setItem","stringify","apiUsers","length","catch","finally","message","slice","map","avatar","tweets","user","PromoImg","AvatarCards","className","onClick","includes","filter","userId","prevButtonColors","userIndex","findIndex","updatedUser","updatedUsers","console","log","handleFollowClick","PageUserWrapper","PageUserTitle","PageUserDescription","backLink","useLocation","state","from","Container","Navigation"],"sourceRoot":""}